BookAPI

1) getBookById

Request
{
	method : "getbookgivenid",
	bookid : "<id>"
}

Response
{
	status : SUCCESS,
	"_id" : "12345677",
	"title" : "Harry Potter",
	"authorId" : "13254",
	"coverPageFile" : "/tmp/file/img.jpg",
	"edition" : "1",
	"category" : "Fiction",
	"numPages" : "200",
	"publisherId" : "1345",
	"rating" : "3",
	"metaData" : "",
	"description" : ""
}

2) addBook

Request
{
	"method" : addBook
	"title" : "Harry Potter",
	"authorId" : "13254",
	"coverPageFile" : "/tmp/file/img.jpg",
	"edition" : "1",
	"category" : "Fiction",
	"numPages" : "200",
	"publisherId" : "1345",
	"rating" : "3",
	"metaData" : "",
	"description" : ""
}

Response 
{
	status : SUCCESS,
	id : "<generated book id>"
}

3) getbooksgivencategory

Request
{
	method : "getbooksgivencategory",
	category : "<category>"
}

Response
{
	status : SUCCESS,
	result : [
	{
		"_id" : "12345677",
		"title" : "Harry Potter",
		"authorId" : "13254",
		"coverPageFile" : "/tmp/file/img.jpg",
		"edition" : "1",
		"category" : "Fiction",
		"numPages" : "200",
		"publisherId" : "1345",
		"rating" : "3",
		"metaData" : "",
		"description" : ""
	},{...} ,{....}
	]
}

4) getbooksgivenauthorname

Request
{
	method : "getbooksgivenauthorname",
	authorname : "<name>"
}

Response
{
	status : SUCCESS,
	result : [
	{
		"_id" : "12345677",
		"title" : "Harry Potter",
		"authorId" : "13254",
		"coverPageFile" : "/tmp/file/img.jpg",
		"edition" : "1",
		"category" : "Fiction",
		"numPages" : "200",
		"publisherId" : "1345",
		"rating" : "3",
		"metaData" : "",
		"description" : ""
	},{...} ,{....}
	]
}

5) getbooksgiventitle

Request
{
	method : "getbooksgiventitle",
	title : "<title>"
}

Response
{
	status : SUCCESS,
	result : [
	{
		"_id" : "12345677",
		"title" : "Harry Potter",
		"authorId" : "13254",
		"coverPageFile" : "/tmp/file/img.jpg",
		"edition" : "1",
		"category" : "Fiction",
		"numPages" : "200",
		"publisherId" : "1345",
		"rating" : "3",
		"metaData" : "",
		"description" : ""
	},{...} ,{....}
	]
}

6) getbooksgivenauthorid

Request
{
	method : "getbooksgivenauthorid",
	authorid : "<authorId>"
}

Response
{
	status : SUCCESS,
	result : [
	{
		"_id" : "12345677",
		"title" : "Harry Potter",
		"authorId" : "13254",
		"coverPageFile" : "/tmp/file/img.jpg",
		"edition" : "1",
		"category" : "Fiction",
		"numPages" : "200",
		"publisherId" : "1345",
		"rating" : "3",
		"metaData" : "",
		"description" : ""
	},{...} ,{....}
	]
}

7) getauthorgivenid

 Request
{
	method : "getauthorgivenid",
	authorid : "<id>"
}

Response
{
	status : SUCCESS,
	result : [
		{
		_id : "<id>",
		name : {
					firstName : "manoj",
					middleName : "R"
					lastName : "thakur"
				},
		gender : M,
		dob : 12321312,
		nationality : "Indian",
		imageFile : "/tmp/img3.jpg",
		shortBio : "jrcbkuhgr grlfgruflrgflrgfk, gfkjsdgf,sjdg flksjagf",
		infoLink : "http://google.com",
		genre : "Fiction"
		
		},{...} ,{....}
	]
}

8) getauthorsgivenname

 Request
{
	method : "getauthorsgivenname",
	authorName : "<name>"
}

Response
{
	status : SUCCESS,
	result : [
		{
		_id : "<id>",
		name : {
					firstName : "manoj",
					middleName : "R"
					lastName : "thakur"
				},
		gender : M,
		dob : 12321312,
		nationality : "Indian",
		imageFile : "/tmp/img3.jpg",
		shortBio : "jrcbkuhgr grlfgruflrgflrgfk, gfkjsdgf,sjdg flksjagf",
		infoLink : "http://google.com",
		genre : "Fiction"
		
		},{...} ,{....}
	]
} 
9) getbookpagecontent
 
Request
{
	method : "getbookpagecontent",
	bookId : "<bookid>",
	pageId : "<pageId>"
}

Response
{
	status : SUCCESS,
	content : <content>,
	bookId : "<bookid>",
	pageId : "<pageId>"
}

10) getbooksgivencriteria

Request
{
	method : "getbooksgivencriteria",
	criteria : "<anything that is searched for>"
}

Response
{
	status : SUCCESS,
	result : [
	{
		"_id" : "12345677",
		"title" : "Harry Potter",
		"authorId" : "13254",
		"coverPageFile" : "/tmp/file/img.jpg",
		"edition" : "1",
		"category" : "Fiction",
		"numPages" : "200",
		"publisherId" : "1345",
		"rating" : "3",
		"metaData" : "",
		"description" : ""
	},{...} ,{....}
	]	
}

11) registeruser
Request
{
	method : "registeruser",
	userinfo : {
	    "firstName" : firstName,
	    "middleName" : middleName,
	    "lastName" : lastName,
	    "gender" : gender,
	    "email" : email,
	    "phone" : phone,
	    "address" : {
		"city" : city,
		"state" : state,
		"addressline11" : addressline1,
		"addressline2" : addressline2,
		"addressline3" : addressline3,
		"pincode" : pincode
	    },
	    usertype: "<usertype>" <drop down PREMIUM, FREE as of now>
 	    dob: "time in milliseconds" <take date in the ui>
	    nationality : "<nationality>" <drop down of all countries>
	    preferences : "<, separated list>" <will be a drop down in the UI>
       }
	
}
Response
{
	status : SUCCESS,
	id:"<generated userID>"
}

12) Login flow:
authenticate from the php code in mysql, then get userdata using:

'getuserbyid'
Request
{
	userid:"<id>",
	method:"getuserbyid"
}

Response
{
	status:"SUCCESS",
	result:{
	    "firstName" : firstName,
	    "middleName" : middleName,
	    "lastName" : lastName,
	    "gender" : gender,
	    "email" : email,
	    "phone" : phone,
	    "address" : {
		"city" : city,
		"state" : state,
		"addressline11" : addressline1,
		"addressline2" : addressline2,
		"addressline3" : addressline3,
		"pincode" : pincode
	    },
	    usertype: "<usertype>" <drop down PREMIUM, FREE as of now>
 	    dob: "time in milliseconds" <take date in the ui>
	    nationality : "<nationality>" <drop down of all countries>
	    preferences : "<, separated list>" <will be a drop down in the UI>
       }
}


